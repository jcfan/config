#!/bin/csh -f
#
#doc Script to make globk eq-file for interval and a list of sites   
#doc
#
if( $#argv == 0 ) then
   echo ""
   echo "sh_makeeqdef: Script to make globk earthquake file "
   echo ""
   echo "Usage:"
   echo "sh_makeqdef -start yyyy/mm/dd -end yyyy/mm/dd -pos <pos file> -m <min. mag.>"
   echo "where start is start date for searching for earthquakes (needed)"
   echo "      end   is the end date (default is one day before current date)"
   echo "            Output files are tagged with this date"
   echo "      pos   is file with site lats/longs and names.  These sites are"
   echo "            checked for proximity to an earthquake." 
   echo "            File can generated from a glist output with:"
   echo "            by grepping for P$ and outputtinhg arguments 1,2 and 8 with "
   echo "            a leading space (Long Lat SiteName)"
   echo "      m     is the minimum moment magnitude"
   echo ""
   echo "Once the script has been run, tsview or tsfit with the earthquake definition"
   echo "file specified can be used to see of earthquake are necessary.  The EQ_DEF"
   echo "lines are sequentially numbered from 01."
   echo ""
   echo "Example output in the <eq>.def file:"
   echo "* ----------------------------------"
   echo "* SEQ Earthquake # 8"
   echo "* EQ 316 MIZU_GPS     318.96     839.40 CoS       11.9 mm"
   echo "* EQ 316 KSMV_GPS      53.67     839.40 CoS      420.6 mm"
   echo "* EQ 316 TSKB_GPS      93.67     839.40 CoS      138.1 mm"
   echo "* EQ 316 MTKA_GPS     154.22     839.40 CoS       51.0 mm"
   echo "* EQ 316 KGN0_GPS     158.94     839.40 CoS       48.0 mm"
   echo "* EQ 316 KGNI_GPS     158.81     839.40 CoS       48.0 mm"
   echo "* EQ 316 USUD_GPS     247.31     839.40 CoS       19.8 mm"
   echo "* EQ_DEF M 7.9"
   echo " eq_def 316    36.270  141.110    839.4 8 2011  3 11  6 15   18.935"
   echo " eq_rename 316"
   echo " eq_coseis 316  0.001 0.001 0.001     18.935     18.935     18.935"
   echo ""
   echo "The SEQ earthquake line is the 8th earthquale that may have effected"
   echo "sites in the postition list;"
   echo "The EQ 316 lines are earthquake 316 from list of all earthquakes with"
   echo "the site effected, its distance from the epicenter (km), the radius of"
   echo "influence of the earthquake (km) and the expected coseimic offset (CoS mm)"
   echo "In this case, KSMV is expected to have ~400 mm of offset"
   echo "The lines with a blank character at the start are earthquake definition "
   echo "lines for globk.  The eq_def has to be converted to a unique 2-char EQ code"
   echo ""

# Line to generate pos file:
# grep 'P$' All.glist | awk '{print " ",$1,$2,$3}' >! All.pos

endif

# Set the default end date before decoding options
set mjd = `doy | tail -n -3 | head -1 | awk '{printf("%d",int($10)-1)}'`
set ye = `doy $mjd | head -1 | awk '{print substr($2,1,4)}'`
set me = `doy $mjd | head -1 | awk '{print substr($2,6,2)}'`
set de = `doy $mjd | head -1 | awk '{print substr($2,9,2)}'`
set MM = 5

set posf = "NONE"
set ys = 0

# Now start decoding:
foreach a ($argv)
  switch($a)
    case -s*:
      set ymd = $argv[2]
      set ys = `echo $ymd | awk -F / '{printf("%4.4d",$1)}'`
      set ms = `echo $ymd | awk -F / '{printf("%2.2d",$2)}'`
      set ds = `echo $ymd | awk -F / '{printf("%2.2d",$3)}'`
    breaksw
    case -e*:
      set ymd = $argv[2]
      set ye = `echo $ymd | awk -F / '{printf("%4.4d",$1)}'`
      set me = `echo $ymd | awk -F / '{printf("%2.2d",$2)}'`
      set de = `echo $ymd | awk -F / '{printf("%2.2d",$3)}'`
    breaksw
    case -p*
      set posf = $argv[2]
    breaksw
    case -m*
      set MM = $argv[2]  # set minimum magnitude
    breaksw
  endsw
  shift
end

# See if need input given
if( $posf == NONE || $ys == 0 )then
   echo "sh_makeqdef error: -start and -posf inputs must be given"
   echo " "
   exit
endif

# Now download the catatlog
set eqo = eq_${ye}${me}${de}.out
set eqd = eq_${ye}${me}${de}.def
# Edited by MAF (2013-05-13)
#wget -O $eqo "http://neic.usgs.gov/cgi-bin/epic/epic.cgi?SEARCHMETHOD=1&FILEFORMAT=4&SEARCHRANGE=HH&SYEAR=${ys}&SMONTH=${ms}&SDAY=${ds}&EYEAR=${ye}&EMONTH=${me}&EDAY=${de}&LMAG=${MM}&UMAG=10&NDEP1=0&NDEP2=1000&IO1=&IO2=&SLAT2=0.0&SLAT1=0.0&SLON2=0.0&SLON1=0.0&CLAT=0.0&CLON=0.0&CRAD=0&SUBMIT=Submit+Search"
#grep ' PDE' $eqo | awk -v MM=${MM} '{if ( $9 > MM ) {{s=s+1} {cs = 3.e-8*13^($9)} {cd = 2.5e-3*5^($9)}{printf("* EQ_DEF M %3.1f\n eq_def %2.2d  %8.3f %8.3f %8.1f 8 %4d %2d %2d %2d %2d %8.3f\n eq_rename %2.2d\n eq_coseis %2.2d  0.001 0.001 0.001 %10.3f %10.3f %10.3f\n",$9,s,$6,$7,cd+8,$2,$3,$4,substr($5,1,2),substr($5,3,2),cs,s,s,cs,cs,cs)}}}' >! eq.def
if ( $ys < 2009 && $ye < 2009 ) then  # Search EHB bulletin only
  wget -O $eqo "http://www.isc.ac.uk/cgi-bin/web-db-v4?request=COLLECTED&req_agcy=EHB&out_format=CATCSV&searchshape=GLOBAL&ctr_lat=&ctr_lon=&radius=&max_dist_units=deg&top_lat=&bot_lat=&left_lon=&right_lon=&srn=&grn=&start_year=${ys}&start_month=${ms}&start_day=${ds}&start_time=00%3A00%3A00&end_year=${ye}&end_month=${me}&end_day=${de}&end_time=23%3A59%3A59&min_dep=&max_dep=&min_mag=${MM}&max_mag=&req_mag_type=Any&req_mag_agcy=prime&table_owner=ehb" 
else if ( $ys < 2009 && $ye >= 2009 ) then  # Search both EHB and ISC bulletins
  wget -O $eqo "http://www.isc.ac.uk/cgi-bin/web-db-v4?request=COLLECTED&req_agcy=EHB&out_format=CATCSV&searchshape=GLOBAL&ctr_lat=&ctr_lon=&radius=&max_dist_units=deg&top_lat=&bot_lat=&left_lon=&right_lon=&srn=&grn=&start_year=${ys}&start_month=${ms}&start_day=${ds}&start_time=00%3A00%3A00&end_year=2008&end_month=12&end_day=31&end_time=23%3A59%3A59&min_dep=&max_dep=&min_mag=${MM}&max_mag=&req_mag_type=MW&req_mag_agcy=prime&table_owner=ehb" "http://www.isc.ac.uk/cgi-bin/web-db-v4?request=COMPREHENSIVE&out_format=CATCSV&bot_lat=&top_lat=&left_lon=&right_lon=&ctr_lat=&ctr_lon=&radius=&max_dist_units=deg&searchshape=GLOBAL&srn=&grn=&start_year=${ys}&start_month=${ms}&start_day=${ds}&start_time=00%3A00%3A00&end_year=${ye}&end_month=${me}&end_day=${de}&end_time=23%3A59%3A59&min_dep=&max_dep=&min_mag=${MM}&max_mag=&req_mag_type=MW&req_mag_agcy=GCMT"
else  # Search ISC bulletin only
  wget -O $eqo "http://www.isc.ac.uk/cgi-bin/web-db-v4?request=COMPREHENSIVE&out_format=CATCSV&bot_lat=&top_lat=&left_lon=&right_lon=&ctr_lat=&ctr_lon=&radius=&max_dist_units=deg&searchshape=GLOBAL&srn=&grn=&start_year=${ys}&start_month=${ms}&start_day=${ds}&start_time=00%3A00%3A00&end_year=${ye}&end_month=${me}&end_day=${de}&end_time=23%3A59%3A59&min_dep=&max_dep=&min_mag=${MM}&max_mag=&req_mag_type=Any&req_mag_agcy=ISC" "http://www.isc.ac.uk/cgi-bin/web-db-v4?request=COMPREHENSIVE&out_format=CATCSV&bot_lat=&top_lat=&left_lon=&right_lon=&ctr_lat=&ctr_lon=&radius=&max_dist_units=deg&searchshape=GLOBAL&srn=&grn=&start_year=${ys}&start_month=${ms}&start_day=${ds}&start_time=00%3A00%3A00&end_year=${ye}&end_month=${me}&end_day=${de}&end_time=23%3A59%3A59&min_dep=&max_dep=&min_mag=${MM}&max_mag=&req_mag_type=Any&req_mag_agcy=NEIC" "http://www.isc.ac.uk/cgi-bin/web-db-v4?request=COMPREHENSIVE&out_format=CATCSV&bot_lat=&top_lat=&left_lon=&right_lon=&ctr_lat=&ctr_lon=&radius=&max_dist_units=deg&searchshape=GLOBAL&srn=&grn=&start_year=${ys}&start_month=${ms}&start_day=${ds}&start_time=00%3A00%3A00&end_year=${ye}&end_month=${me}&end_day=${de}&end_time=23%3A59%3A59&min_dep=&max_dep=&min_mag=${MM}&max_mag=&req_mag_type=Any&req_mag_agcy=GCMT" "http://www.isc.ac.uk/cgi-bin/web-db-v4?request=COMPREHENSIVE&out_format=CATCSV&bot_lat=&top_lat=&left_lon=&right_lon=&ctr_lat=&ctr_lon=&radius=&max_dist_units=deg&searchshape=GLOBAL&srn=&grn=&start_year=${ys}&start_month=${ms}&start_day=${ds}&start_time=00%3A00%3A00&end_year=${ye}&end_month=${me}&end_day=${de}&end_time=23%3A59%3A59&min_dep=&max_dep=&min_mag=${MM}&max_mag=&req_mag_type=Any&req_mag_agcy=JMA"
endif
awk -v MM=$MM -F',' 'BEGIN {s=1}; /DATA_TYPE EVENT_CATALOGUE/,/STOP/ {if (NF >= 11 && $1 !~ /EVENTID/ && $11 >= MM) {cs=3e-8*13**$11; cd=2.5e-3*5**$11; printf("* EQ_DEF M %3.1f\n eq_def %02d %8.4f %9.4f %7.1f %5.1f %4d %02d %02d %02d %02d %8.4f\n eq_rename %02d\n eq_coseis %02d 0.001 0.001 0.001 %8.4f %8.4f %8.4f\n",$11,s,$5,$6,cd+8,$7,substr($3,1,4),substr($3,6,2),substr($3,9,2),substr($4,1,2),int(substr($4,4,2)+substr($4,7)/60+0.5),cs,s,s,cs,cs,cs); s++}}' $eqo >! eq.def
# End edit by MAF (2013-05-13)
#
echo "* EQDEFS for $ys $ms $ds to $ye $me $de Generated `date`" >! $eqd
echo "* Proximity based on $posf file" >> $eqd
echo "Created $eqo and $eqd"
#
# Now see how many of these earthquakes may have displaced sites
#
grep 'eq_def' eq.def | awk '{print $2, $3,$4,$5,$7,$8,$9,$10,$11,$12}' >&! eqo.dat
#
# Now loop over earthqakes and find those effect our sites.
#
set num = `wc -l eqo.dat | awk '{print $1}'`
set line = 0
set snum = 0
while ( $line < $num )
   @ line = $line + 1
   set eqa = `tail -n +${line} eqo.dat | head  -1`

   set nn = `grep '^ ' $posf | awk -v lat=$eqa[2] -v lng=$eqa[3] -v d=$eqa[4] -v eq=$eqa[1] '{cd=sin($2/57.296)*sin(lat/57.296)+cos($2/57.296)*cos(lat/57.296)*cos((lng-$1)/57.296)} {dist = atan2(sqrt(1-cd**2),cd)*6378.15} {if ( (sin($2/57.296)*sin(lat/57.296)+cos($2/57.296)*cos(lat/57.296)*cos((lng-$1)/57.296)) > cos(d/6378.153)) {print " EQ ",eq,$3,dist,d}}' | wc -l`
   if( $nn > 0 ) then
      @ snum ++
      echo "* ----------------------------------" >> $eqd
      echo "* SEQ Earthquake # $snum" >> ${eqd}
      grep '^ ' $posf | awk -v lat=$eqa[2] -v lng=$eqa[3] -v d=$eqa[4] -v eq=$eqa[1] -v cs=$eqa[10] '{cd=sin($2/57.296)*sin(lat/57.296)+cos($2/57.296)*cos(lat/57.296)*cos((lng-$1)/57.296)} {dist = atan2(sqrt(1-cd**2),cd)*6378.15} {cm=cs*(8.0/dist)**2} {if ( (sin($2/57.296)*sin(lat/57.296)+cos($2/57.296)*cos(lat/57.296)*cos((lng-$1)/57.296)) > cos(d/6378.153)) {printf("* EQ %2.2d %s %10.2f %10.2f CoS %10.1f mm\n",eq,$3,dist,d,cm*1000.)}}' >> ${eqd}
      set lns = `echo $line | awk '{print ($1-1)*4+1}'`
      tail -n +$lns eq.def | head -n 4 >> ${eqd}
   endif
end


