#!/bin/csh -f
#
#doc Create a GMT map of China (used by sh_plotvel)
#doc
#
echo " " 
echo "Arguments for sh_map_china:" $argv 
#
# This shell script for creating a GMT map of China, designed to serve as
# a template for other regions, is based on sh_map_turkey written by M.Burc Oral 
# and stored in /contributions/oral/com_globk.  The modest list of arguments 
# interface easily with sh_plotvel, which can use this or a similar script to
# create the maps onto which station velocities are plotted.  Enhancements to
# the maps can be accomplished to some extent with direct input to sh_plotvel
# (i.e., without calling this script) or by customizing this script.
#  R. King and S. McClusky   November 1995.    Last modified by R. King 981201
# 
if ( $#argv == 0   ) then
echo "  "
echo " Called sh_map_china to create a GMT map."
echo " "
echo " Usage: "
echo "  "
echo "      sh_map_china -ps <file> -o <options> -page <option> -color <option> "   
echo " "           
echo "      Required: "
echo " "       
echo "        -ps  file     : Name of output postscript file"   
echo " "
echo "      Required if called from another script that will continue mapping (e.g. sh_plotvel):"
echo " "
echo "         -c     "
echo " " 
echo "      Optional:   "
echo " "
echo "        -o  options   : GMT projection options < size range borders > "
echo " " 
echo "        -page  option : Page orientation   P for portrait (default),  L for landscape "          
echo " "
echo "        -color option : yes or no (default)    "
echo " "
echo "   Example:  sh_map_china -ps chinamap.ps  -o -R95/106/20/33 -Jm0.45 -Bf1a2/f1a2WSen -color yes "
echo "             sh_map_china -ps chinamap.ps "
echo " "
echo "   Requirement:   The location of the maps on your system must be set as 'root_map'."
echo "                  The default is '~/gg/maps' where 'gg' is an alias in your home    "
echo "                  directory pointing to the level above 'gamit' and 'kf'."
echo " "
exit
endif

##################### Set up the defaults ##################################################### 

set root_map = ~/gg/maps     

# Input variables   
set OPTION = ""
set PAGE = -P
set color = no 
set called = no 

# Change any of the options below to "yes" to enable plotting of these features
set topo       = no
set psscale    = yes
set labels     = no
set labels2    = no
set labels3    = no
set boundary   = yes 
set nuvel1     = no
set pattern    = no
set ocean_blue = yes
set regions    = no
set tectonics  = yes
# set the minimum area of features like lakes or islands to be plotted
set min_area   = 200
set coast_res  = i
set illu_file  =  "none"  
#set palette    =  $root_map/color_tibet.cpt
#set topo_file  =  $root_map/etopo5.grd
set palette    =  $root_map/tien_color.cpt
# high resolution (30"), S Asia only
#set topo_file  =  $root_map/E060N40.grd
#set illu_file  =  $root_map/E060N40i.grd 
# Lower resolution (6 min), whole world 
set illu_file  =  $root_map/topo62i.grd
set topo_file  =  $root_map/topo62.grd

# Internal controls 
set border       = "-Bf1a2/f1a2WSen "
set projection   = "-Jm.55"
set range        = "-R72/86/32/50 " 
set raster       = -0
set c = "/0/0/0" 
set text_color   = "-G0/0/0"
if ( $topo == yes ) then  
  set yshift       = 0.5
else 
  set yshift       = 1.5
endif    
#set V            = -V 
set V            = " "
##################### Decipher the command line ##############################################

while ($#argv > 0 ) 
set input = ( $argv ) 
switch($input[1])
	case -ps:
		set psfile      =  $input[2]
		breaksw  
	case -R*: 
 		set  range      =  $input[1]
		breaksw 
	case -J*: 
 		set  projection =  $input[1]
		breaksw
	case -B*: 
 		set border      =  $input[1]
		breaksw
	case -page:
		set PAGE    =  -$input[2]  
       if ( $input[2] == "L" ) set PAGE = " "
		breaksw 
   case -c
       set called      = yes
       breaksw
	case -color:
		if (  $input[2] == yes ) then 
	    	set c = "/0/0/0" 
	    	set text_color = "-G0/0/0"
		endif 
		breaksw	
endsw 
shift argv 
end

# set GMT defaults
if ( $called != yes ) then
  gmtdefaults -D >! .gmtdefaults
  echo "LABEL_FONT_SIZE  = 10"    >> .gmtdefaults
  echo "ANOT_FONT_SIZE   = 10"    >> .gmtdefaults
  echo "HEADER_FONT_SIZE = 10"    >> .gmtdefaults
  echo "WANT_EURO_FONT   = FALSE" >> .gmtdefaults
  echo "FRAME_WIDTH = 0.05" >> .gmtdefaults
# echo "DEGREE_FORMAT    = 3    " >> .gmtdefaults
endif  

# If the projection options are not input, set them now from the script defaults

if ( $#OPTION != 3 )  set OPTION  =  ( $range $projection $border ) 
echo " "
echo "SH_MAP_CHINA - range, projection, borders : "  $OPTION  
echo " "

# Set options for enhanced maps
set OPTION2   = (   $PAGE " -H0  -K -O -M " ) 
 
##################### Create the map ##############################################

# Coastlines or topography from GMT
if ( $topo != yes ) then 
  echo "Plotting coastlines"
  if ( $boundary != yes ) then 
    if ( $pattern != yes ) then
      if ( $ocean_blue != yes ) then
        pscoast  $OPTION  -W1   $PAGE -K  -D$coast_res  -A$min_area  -Y$yshift                   >! $psfile
      else 
        pscoast  $OPTION  -W1   $PAGE -K  -S230/240/255  -D$coast_res   -A$min_area  -Y$yshift   >! $psfile 
      endif
    else  
      if ( $ocean_blue != yes ) then
        pscoast  $OPTION  -W1   $PAGE -K  -Gp0.25/31    -D$coast_res  -A$min_area  -Y$yshift     >! $psfile
      else  
        pscoast  $OPTION  -W1   $PAGE -K  -Gp0.25/31  -S230/240/255  -D$coast_res  -A$min_area  -Y$yshift >! $psfile
      endif
    endif
  else
    if ( $pattern != yes ) then
      if ( $ocean_blue != yes ) then
        pscoast  $OPTION  -W1   $PAGE -K  -N1 -D$coast_res  -A$min_area  -Y$yshift                 >! $psfile
      else 
        pscoast  $OPTION  -W1   $PAGE -K  -N1 -S230/240/255  -D$coast_res  -A$min_area -Y$yshift   >! $psfile
      endif 
    else                                                
      if ( $ocean_blue != yes ) then
        pscoast  $OPTION  -W1   $PAGE -K  -N1 -Gp0.25/31 -D$coast_res  -A$min_area  -Y$yshift      >! $psfile 
      else
        pscoast  $OPTION  -W1   $PAGE -K  -N1 -Gp0.25/31 -S230/240/255 -D$coast_res -A$min_area  -Y$yshift >! $psfile
      endif 
    endif     
  endif
else 
  echo " "                    
  echo "Plotting topography: "$topo_file
  if ( $psscale == yes ) then
    set paletteXY  = (  -D4.0/0.125/6.0/0.125h -L   -B:.TOPOGRAPHY:  ) 
    psscale   -C$palette  $paletteXY             $V  $PAGE  -K                 $raster >! $psfile
    if ( $illu_file == "none" ) then
      grdimage  -C$palette  $topo_file                $OPTION  $V  $PAGE  -K  -O -Y$yshift   $raster -V >> $psfile   
    else
      grdimage  -C$palette  $topo_file  -I$illu_file  $OPTION  $V  $PAGE  -K  -O -Y$yshift   $raster -V >> $psfile   
    endif
  else
    if ( $illu_file == "none" ) then
      grdimage  -C$palette  $topo_file               $OPTION  $V  $PAGE  -K     -Y$yshift   $raster -V >! $psfile
    else   
      grdimage  -C$palette  $topo_file -I$illu_file  $OPTION  $V  $PAGE  -K     -Y$yshift   $raster -V >! $psfile
    endif
  endif
  echo "Plotting coastlines"
  if ( $boundary != yes ) then
      if ( $ocean_blue != yes ) then
        pscoast                        -W3  $OPTION  $V  -P  -K  -O  -D$coast_res -A$min_area     >> $psfile 
      else  
        pscoast                        -W3  $OPTION  $V  -P  -K  -O -S180/240/255 -D$coast_res -A$min_area     >> $psfile
      endif 
   else
      if ( $ocean_blue != yes ) then
        pscoast                        -W3  $OPTION  $V  -P  -K  -O  -N1/1ta  -D$coast_res -A$min_area >> $psfile
      else   
# Dark_Blue        pscoast                        -W3  $OPTION  $V  -P  -K  -O  -N1/1ta -S30/144/255  -D$coast_res -A$min_area >> $psfile 
# Light_Blue       pscoast                        -W3  $OPTION  $V  -P  -K  -O  -N1/1ta -S230/240/255 -D$coast_res -A$min_area >> $psfile 
        pscoast                        -W3  $OPTION  $V  -P  -K  -O  -N1/1ta -S180/240/255 -D$coast_res -A$min_area >> $psfile 
      endif
  endif
endif 

# Optional enhancements - edit for your own purposes
if ( $tectonics == yes ) then
  echo " "
  echo "Plotting tectonic features"
#  psxy  $root_map/china_tectonic_faults           $OPTION $OPTION2 -W1$c                        >> $psfile
  psxy  $root_map/china_tectonic_faults.new           $OPTION $OPTION2 -W1$c                        >> $psfile
endif 

#Nuvel1 ( needs to be adjusted.)
if ( $nuvel1 == yes ) then
  echo " "
  echo "Plotting NUVEL1 plate boundaries"
  psxy    $root_map/nuvel1_plates_mod   $OPTION $OPTION2  -M  -:  -W5/255/0/0     >> $psfile
endif

if ( $labels == yes ) then         
  echo " "                    
  echo "Plotting labels: " $root_map/china_labels        
  set r = `echo $range | cut -c3- | awk '{FS="/"} {print $1, $2, $3, $4}'`  
  awk '$1 > lonmin/1 && $1 < lonmax/1 && $2 > latmin/1 && $2 < latmax/1 {print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11}' lonmin=$r[1] lonmax=$r[2] latmin=$r[3] latmax=$r[4] $root_map/china_labels >! tmp.labels
  pstext tmp.labels  $OPTION  -O  -K  $PAGE  $text_color    >> $psfile  
endif 
              
if ( $regions == yes ) then
  echo " "                    
  echo "Plotting regions: "$root_map/regions
  psxy    $root_map/regions   $OPTION $OPTION2  -W5/0/0/0 -L  -:  >> $psfile
endif

\rm tmp.labels   
              
# Terminate the plot if not called by another script 
if ( $called == no ) then
  echo "Created  postscript file    :" $psfile
  echo "  "
  echo "To view  postript file      : gs" $psfile  
  echo "  "
  echo "Hardcopy   postript file    :  lpr "$psfile  
  # mark the end of ps file
  pstext <<ENDD      $OPTION  -O   $PAGE -N   -U   >> $psfile  
ENDD

# Otherwise print a message and return to the calling script
else
  echo " "
  echo "sh_map_china produced plot: " $psfile
  echo " "    
endif

exit
