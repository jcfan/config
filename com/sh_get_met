#!/bin/csh -f

# Script to download RINEX met files and/or zenith delay values in SINEX files from CDDIS
#
# R. King 16 December 2004 based almost entirely on code from P Tregoning's sh_pwcomp of 7 December
# Last change R. King 10 January 2007
#
# modification for -ndays option by kr, 05 August 2009
#

if( $#argv == 0 ) then
  echo "===================================================================================="
  echo " GET RINEX met files and/or SINEX zenith delay files from an external archive "
  echo "  "
  echo " Usage: sh_get_met -archive <archive> -yr <yr> -doy <doy> -ndays <num> -type <type> -sites <sites> -ftp_prog <ftp/ncftp> "
  echo "  "
  echo "        <archive>  One of the archives specified in ftp_info [Default cddis] "
  echo "        <yr> 4 char year of nav data requested  [Required] "
  echo "        <doy> 3 char day of year of nav data requested [Required] " 
  echo "	<num> Number of concecutive days of data to retrive [Default = 1]"  
  echo "        <type> r for RINEX  s for SINEX  rs for both [Default rs] "
  echo "        <sites> List of sites to be retreived from the ftp archive [Required] " 
  echo "        <ftp/ncftp> select the ftp program to be used [default ftp]"
  echo "  "      
  echo " Examples: sh_get_met -yr 2004 -doy 001 -sites zimm pots bvlk "
  echo "           sh_get_met -archive unavco -yr 2004 -doy 001 -type r -sites zimm pots bvlk -ftp_prog ncftp"
  echo "  "
  echo "===================================================================================="
  exit
endif 

##################### SET UP DEFAULTS #############################   
#
# Setup necessary paths and filenames

set year = ''
set yr = ''
set doy = ''
set log = ''
set numd = 1
set archive = cddis 
set type = 'rs'
set sitelist = ''
set metdir = ''
set tzddir = '' 
set ftplist = '' 
set ftplogin = ''
set ftp_prog = 'ftp -inv'
set doftp = "no"       
set firstsite = "yes"

##################### DECIPHER COMMAND LINE #######################   
while ($#argv > 0 )
  set input = ( $argv )
  switch($input[1])
    case -a:
    case -arc:
    case -archive:
      set archive  = $input[2]  
    breaksw  
    case -t*
      set type = $input[2]
    breaksw
    case -y*:
      set year = $input[2]
# Variable yr[1] = 4 char yr, yr[2] = 2 char yr, yr[3] = 1 char yr
      set yr = `sh_year -year $year`
    breaksw 
    case -d:
    case -doy:
      set doy = $input[2]  
    breaksw 
# =============== by kr ===============================
    case -nd*:
    	set numd = $input[2]
    breaksw
# =====================================================
    case -si*:
       set sitelist = (`echo $argv | cut -d- -f2`); shift sitelist
    breaksw
    case -ftp_prog:
      set ftp_prog = $input[2]  
      if ($ftp_prog == 'ftp') set ftp_prog = 'ftp -inv'
    breaksw 
  endsw
  if ( $#argv > 0 ) shift argv
end
alldone:

##################### GET THE JOB DONE ############################    
#
# Set timestamp hostname variable
set ts = "`hostname`:`date +"%H%M%S"`"
set log = `date "+get_rinex_${archive}_%y%m%d:%H%M.log"`
touch $log 

# Check all required info given.
if ( ${year} == '' ||  ${doy} == '' ) then
  echo "Not all required fields given -- yr: $year doy: $doy --Stop"
  exit
endif
set GPSW = `doy $year $doy | tail -n +2 | head -n 1 | awk '{printf "%4.4d \n", $3}'`
           
# Set type of files to get
if( $type == 'r' ) then
  set sinex = "no"  
  set rinex = "yes"
else if ( $type == 's' ) then
  set rinex = "no"
  set sinex = "yes"
else               
  set sinex = "yes"  
  set rinex = "yes"
endif

# Check if ncftp is requested
if ( `echo $ftp_prog | awk '{print $1}'` == 'ncftp' ) then
  if (`echo $ftpcmd | awk '{print $1}'` == 'ftp') then
    set ftpcmd = `echo $ftp_prog $archive`
    echo "-ftp_prog = ncftp requested, ftpcmd now: $ftpcmd" 
  endif
endif   

  
echo " "    
echo "########################################"

# loop through the sites --goes to end of routine
foreach site (`echo $sitelist`) 
# ============ by kr ==============================
 @ sday = `echo "ibase=10; ${doy} - 1" | bc`
 @ count = `echo "ibase=10; ${numd}" | bc`
 echo "count=$count"
 while ( $count )
  @ count = $count - 1
  #echo "count=$count"
  set sday = `echo $sday | awk '{printf" %03d \n", $1 + 1}'`
  
# =================================================  
# change doy to sday 
#==================================================
   set lc_site = ${site}${sday}0.${yr[2]} 
   if( $rinex == "yes" ) then  
     set ftp_info = `sh_get_ftp_info -archive $archive -type metfile`
     #===============================================================
     #echo "archive: $archive"
     #===============================================================
     echo Download file ${lc_site}m.Z
     while ($#ftp_info > 0 )
        set input = ( $ftp_info )
        switch($input[1])
          case -ftplogin:
            set ftplogin  = (`echo $ftp_info | cut -d- -f2`); shift ftplogin 
          breaksw 
          case -ftpdir:
            set metdir  = $input[2]  
          breaksw 
          case -ftpcmd:
            set ftpcmd  = (`echo $ftp_info | cut -d% -f2`); shift ftpcmd  
          breaksw 
        endsw
        if ( $#ftp_info > 0 ) shift ftp_info
     end
   endif
                                         
   if( $sinex == "yes" ) then  
      set ftp_info = `sh_get_ftp_info -archive $archive -type tropo`  
      echo Attempting to download ${site}${GPSW}.zpd
      set ftp_info = `sh_get_ftp_info -archive $archive -type tropo`
      while ($#ftp_info > 0 )
        set input = ( $ftp_info )
        switch($input[1])
          case -archive:
            set archive  = $input[2]  
          breaksw 
          case -ftplogin:
            set ftplogin  = (`echo $ftp_info | cut -d- -f2`); shift ftplogin 
          breaksw 
          case -ftpdir:
            set tzddir  = $input[2]  
          breaksw 
          case -ftpcmd:
            set ftpcmd  = (`echo $ftp_info | cut -d% -f2`); shift ftpcmd  
          breaksw 
        endsw
        if ( $#ftp_info > 0 ) shift ftp_info
      end
    endif

    if( $firstsite == "yes" ) then      
#      echo "########################################"
      echo "Information extracted from ftp_info"
#      echo "----------------------------------------"
      echo "  ftpsite $archive"
      echo "  ftplogin $ftplogin"
      echo "  metdir $metdir"
      echo "  tzddir $tzddir"
      echo "  ftpcmd $ftpcmd"
      set firstsite = "no"   
#      echo "########################################"
 
    endif

# Set up the ftp script
      if (`echo $ftpcmd | awk '{print $1}'` == 'ftp') then 
         echo "user $ftplogin" >! tmp.get.$ts  
         echo "binary" >> tmp.get.$ts
         set getcmd = 'get'
      else
         echo "binary" >! tmp.get.$ts
         set getcmd = 'get -f -z'
      endif             

#  set up the directory names
# ====================================================================================================================
# for days and directory use "sday" instead of "doy"and modify the following lines as in sh_get_navi and sh_get_rinex
# ${sday}/ 
# ====================================================================================================================
      set metdir = `echo $metdir | sed s/"YYYY"/$yr[1]/ | sed s/"YY"/$yr[2]/  | sed s/"YY"/$yr[2]/ | sed s/"DDD"/${sday}/ | sed s/"SSSS"/${site}/ `
      set tzddir = `echo $tzddir | sed s/"YYYY"/$yr[1]/ | sed s/"YY"/$yr[2]/  | sed s/"YY"/$yr[2]/ | sed s/"DDD"/${sday}/ | sed s/"GPSW"/${GPSW}/ | sed s/"SSSS"/${site}/ `

      if($rinex == "yes")then
          echo cd $metdir         >> tmp.get.$ts
          echo "mget ${lc_site}m.*"  >> tmp.get.$ts
      endif
      if($sinex == "yes")then
          echo cd $tzddir         >> tmp.get.$ts 
          echo "mget ${lc_site}zpd.*" >> tmp.get.$ts       
      endif

      echo 'quit' >> tmp.get.$ts
      cat tmp.get.$ts >> $log
      echo ' ' >> $log    
      echo '--------------------' >> $log

# do the FTP
      $ftpcmd < tmp.get.$ts | grep -v '^220' >! tmp.log.$ts     
      set num = `grep "Transfer completed" tmp.log.$ts | wc`
      if( $num[2] == 0 ) then
         echo "--file not found"
      else
         echo "--successfully downloaded"
      endif
      cat tmp.log.$ts >> $log

# uncompress the files 
     if( -e ${lc_site}m.Z) gunzip ${lc_site}m.Z 
     if( -e ${site}${GPSW}.zpd.gz) gunzip  ${site}${GPSW}.zpd.gz
# ======= end of while (count) loop ================
 end
# ==================================================
#-----end of site loop
end     
echo "########################################"
echo " "  

# clean up
\rm tmp* get*.log

exit
