#!/bin/tcsh -f
#
#doc Get rinex navigation files by day number from the SOPAC/CDDIS archive
#doc
#
# Last modified 99/04/15 by Simon McClusky

######################## INSTRUCTIONS #############################
# See if arguments passed
if( $#argv == 0 ) then
  echo "===================================================================================="
  echo " Get RINEX navigation files from SOPAC or CDDIS archives  " 
  echo "  "
  echo " Usage: sh_get_nav -archive <cddis/sopac> -yr <yr> -doy <doy> -ndays <num> -rxobs -allnav -ftp_prog <ftp/ncftp>"
  echo "  "
  echo "        <archive>  Either sopac or cddis  [Default sopac] "
  echo "        <yr> 4 char year of nav data requested  [Required] "
  echo "        <doy> 3 char day of year of nav data requested [Required] " 
  echo "        <num> Number of consecutive days of data to retreive [Default 1] "
  echo "        <rxobs> Retreive nav files from RINEX observation day directory "
  echo "                archives rather than RINEX navigation file archives. [Default no] "  
  echo "        <allnav> Retreive all nav files, NOT only combined brdc or auto files. [Default no]" 
  echo "        <ftp/ncftp> select ftp program to use [default is ftp]"
  echo "  "                                               
  echo " Examples: sh_get_nav -archive sopac -yr 1998 -doy 235 -ndays 1 -ftp_prog ncftp"
  echo "           sh_get_nav -archive cddis -yr 1998 -doy 235 -ndays 7 "
  echo "           sh_get_nav -archive sopac -yr 1998 -doy 235 -ndays 7 -rxobs "
  echo "  "
  echo "===================================================================================="
  exit
endif 

##################### SET UP DEFAULTS #############################   
set numd = 1
set year = ''
set yr = ''
set doy = ''
set site = ''
set archive = sopac
set rxobs = no
set allnav = no
set ftp_prog = 'ftp -inv'
set navdir = 'navfile'

##################### DECIPHER COMMAND LINE #######################   
while ($#argv > 0 )
  set input = ( $argv )
  switch($input[1])
    case -ar*:
      set archive  = $input[2]  
    breaksw 
    case -nd*:
      set numd = $input[2] 
    breaksw 
    case -y*:
      set year = $input[2]
# Variable yr[1] = 4 char yr, yr[2] = 2 char yr, yr[3] = 1 char yr
      set yr = `sh_year -year $year`
    breaksw 
    case -d*:
      set doy = `echo $input[2] | awk '{printf" %03d \n", $1}'`
    breaksw 
    case -r*:
      set rxobs = yes
      set navdir = 'navalt' 
    breaksw 
    case -al*:
      set allnav = yes 
    breaksw 
    case -ftp_prog:
      set ftp_prog = $input[2] 
    breaksw 
  endsw
  if ( $#argv > 0 ) shift argv
end
alldone:

##################### READ THE FTP_INFO TEMPLATE ############################    
#
set ftp_info = `sh_get_ftp_info -archive $archive -type $navdir`

while ($#ftp_info > 0 )
  set input = ( $ftp_info )
  switch($input[1])
    case -ftpsite:
      set ftpsite  = $input[2]  
    breaksw 
    case -ftplogin:
      set ftplogin  = (`echo $ftp_info | cut -d- -f2`); shift ftplogin 
    breaksw 
    case -ftpdir:
      set ftpdir  = $input[2]  
    breaksw 
    case -ftpcmd:
      set ftpcmd  = (`echo $ftp_info | cut -d% -f2`); shift ftpcmd  
    breaksw 
  endsw
  if ( $#ftp_info > 0 ) shift ftp_info
end

echo "Information extracted from ftp_info"
echo "########################################"
echo "ftpsite $ftpsite"
echo "ftplogin $ftplogin"
echo "ftpdir $ftpdir"
echo "ftpcmd $ftpcmd"
echo "########################################"

##################### GET THE JOB DONE ############################
# Set timestamp hostname variable
set ts = "`hostname`:`date +"%H%M%S"`"

# Check all required info given.
if ( ${year} == '' ||  ${doy} == '' ) then
  echo "Not all required fields given -- yr: $year doy: ${doy} --Stop"
  exit
endif

# Check if ncftp is requested
if ( `echo $ftp_prog | awk '{print $1}'` == 'ncftp' ) then
  if (`echo $ftpcmd | awk '{print $1}'` == 'ftp') then
    set ftpcmd = `echo $ftp_prog $ftpsite` 
    echo "-ftp_prog = ncftp requested, ftpcmd now: $ftpcmd" 
  endif
endif

# Set up the ftp script
if (`echo $ftpcmd | awk '{print $1}'` == 'ftp') then 
  set getcmd = 'get'
  echo "user $ftplogin" >! tmp.get.$ts  
  echo "binary" >> tmp.get.$ts
else
  set getcmd = 'get -f -z'
  echo "binary" >! tmp.get.$ts
endif

# Set up the iteration
  set sday = $doy
  set count = $numd 

# ftp to SOPAC and get files
if ( $archive == "sopac" ) then
  echo "Getting auto or brdc files for ${yr[1]} ${doy} for ${numd} days from ${ftpsite} "
#
# Now set up the script to get files
  while ( $count )
#   OLD style cd commands
#   echo "cd /pub/nav/${yr[1]}/${sday}" >> tmp.get.$ts
#   echo "cd /pub/rinex/${yr[1]}/${sday}" >> tmp.get.$ts
    set directory = `echo $ftpdir | sed s/"YYYY"/$yr[1]/ | sed s/"YY"/$yr[2]/ | sed s/"DDD"/${sday}/ | sed s/"SSSS"/${site}/ `
    echo "cd $directory" >> tmp.get.$ts
    if ( $allnav == "no" ) then
      echo $getcmd 'auto'${sday}'0.'${yr[2]}'n.Z  brdc'${sday}'0.'${yr[2]}'n.Z' >> tmp.get.$ts 
    else
      echo 'mget ????'${sday}'0.'${yr[2]}'n.Z'  >> tmp.get.$ts 
    endif
    @ count = $count - 1
    set sday = `echo $sday | awk '{printf" %03d \n", $1 + 1}'`
  end
  echo 'quit' >> tmp.get.$ts
  set log = `date '+get_nav_sopac_%y%m%d:%H%M.log'` 
  cat tmp.get.$ts >! $log
  echo ' ' >> $log
  echo '--------------------' >> $log 
  $ftpcmd < tmp.get.$ts | grep -v '^230' >> $log
#
# Now uncompress the brdc
  if ( $ftpcmd[1] == "ftp" ) then
    grep '^get ' tmp.get.$ts | awk '{print "gunzip -f",$3}' >! tmp.unc.$ts 
  else if ( $ftpcmd[1] == "ncftp" ) then
    grep '^get ' tmp.get.$ts | awk '{print "gunzip -f",$5}' >! tmp.unc.$ts
  endif
  csh tmp.unc.$ts >> $log
  \rm tmp.get.$ts tmp.unc.$ts
#

else if ( $archive == "cddis" ) then
  echo "Getting BRDC files for ${yr[1]} ${doy} for ${numd} days from ${ftpsite} "
#
# Now set up the script to get files
  while ( $count )
#   OLD style cd commands
#   echo "cd /pub/gps/gpsdata/brdc/${yr[1]}" >> tmp.get.$ts
#   echo "cd /pub/gps/gpsdata/${yr[2]}${sday}/${yr[2]}n" >> tmp.get.$ts
    set directory = `echo $ftpdir | sed s/"YYYY"/$yr[1]/ | sed s/"YY"/$yr[2]/ | sed s/"DDD"/${sday}/ | sed s/"SSSS"/${site}/ `
    echo "cd $directory" >> tmp.get.$ts
    if ( $allnav == "no" ) then
      echo $getcmd "brdc${sday}0.${yr[2]}n.Z brdc${sday}0.${yr[2]}n.Z" >> tmp.get.$ts 
    else
      echo 'mget ????'${sday}'0.'${yr[2]}'n.Z'  >> tmp.get.$ts 
    endif
    @ count = $count - 1
    set sday = `echo $sday | awk '{printf" %03d \n", $1 + 1}'`
  end

  echo 'quit' >> tmp.get.$ts

  set log = `date '+get_nav_cddis_%y%m%d:%H%M.log'` 
  cat tmp.get.$ts >! $log
  echo ' ' >> $log
  echo '--------------------' >> $log
  $ftpcmd < tmp.get.$ts | grep -v '^230' >> $log
#
# Now uncompress the brdc 
  if ( $ftpcmd[1] == "ftp" ) then
    grep '^get ' tmp.get.$ts | awk '{print "gunzip -f",$3}' >! tmp.unc.$ts 
  else if ( $ftpcmd[1] == "ncftp" ) then
    grep '^get ' tmp.get.$ts | awk '{print "gunzip -f",$5}' >! tmp.unc.$ts
  endif
  csh tmp.unc.$ts >> $log

  \rm tmp.get.$ts tmp.unc.$ts

else
  echo "Archive $archive not available from this script. --Stop"
  exit
endif

# Thats all.
exit
