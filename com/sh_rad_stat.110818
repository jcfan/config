#!/bin/csh -f
#
#doc Outputs statistics for radiation parameter estimates 
#doc
#
# sh_rad_stat
#
# Purpose      Outputs statistics for radiation parameter estimates and
#              makes suggestions for process noise to be used
#
# Required     List of daily .org files with orbits
#
# Output       sites.default file with the list of sites to use in each
#              network
#
# sh_rad_stat <list of .org files>
#
#
# by Tom Herring 02/01/2003
#

if ($#argv < 1) then
        sed -e "1d" -e "/by Tom/q" -e "s/#//" $0
        exit
endif

# Get the list of files passed
set list = `echo $argv`
set root = "rad"
#
# First extract the nodes of the orbits and rank PRN's by orbital plane
set PRNS = `grep -h 'RA Node' $list | sort -u -k 2,2 | awk '{print $2,int($8/60)}' | sort -n -k 2 | awk '{print $1}'`
set planes = `grep -h 'RA Node' $list | sort -u -k 2,2 | awk '{print $2,int($8/60)}' | sort -n -k 2 | awk '{print $2}'`

# OK: loop over PRNS and extract Rad parameters
set i = 0
echo "Mean Radiation Parameters from $list" >! ${root}.mean
echo "PRN    P  #   Direct    Y axis    B axis     Cos D     Sin D     Cos Y     Sin Y     Cos B    Sin B" >> ${root}.mean
echo "Mean Radiation Parameters from $list" >! ${root}.wrms
echo "PRN    P  #   Direct    Y axis    B axis     Cos D     Sin D     Cos Y     Sin Y     Cos B    Sin B" >> ${root}.wrms
echo "Mean Radiation Parameters from $list" >! ${root}.nrms
echo "PRN    P  #   Direct    Y axis    B axis     Cos D     Sin D     Cos Y     Sin Y     Cos B    Sin B" >> ${root}.nrms
echo "* Radiation Process Noise from $list" >! ${root}.mar

foreach pn (`echo $PRNS`)
   @ i = $i + 1
   echo "Processing $pn Planes $planes[$i]"
   echo -n "$pn $planes[$i]" >> ${root}.mean
   echo -n "$pn $planes[$i]" >> ${root}.wrms
   echo -n "$pn $planes[$i]" >> ${root}.nrms
   echo -n " mar_rad $pn "   >> ${root}.mar
#
#  Now for each radiation parameter extract the estimated values
   grep -h $pn $list | grep '   Direct Rad    (none)' | awk '{print " 1 " substr($0,47,10)*100,substr($0,75)*100}' >! t.r
   poly01r yes 0 no no 0 < t.r | awk '{print $2/100, $15/100,$13,$11}' >! t.f
   awk '{printf(" %2d %8.5f ",$4,$1)}' t.f >> ${root}.mean
   awk '{printf(" %2d %8.5f ",$4,$2)}' t.f >> ${root}.wrms
   awk '{printf(" %2d %8.5f ",$4,$3)}' t.f >> ${root}.nrms
   awk '{if( $3 > 1 ) {printf(" %8.4f ",$2^2*365)} else {printf(" %8.1f ",0.0)}}' t.f >> ${root}.mar

   grep -h $pn $list | grep 'Y Axis Bias   (none) ' | awk '{print " 1 " substr($0,47,10)*100,substr($0,75)*100}' >! t.r
   poly01r yes 0 no no 0 < t.r | awk '{print $2/100, $15/100,$13,$11}'>! t.f
   awk '{printf(" %8.5f ",$1)}' t.f >> ${root}.mean
   awk '{printf(" %8.5f ",$2)}' t.f >> ${root}.wrms
   awk '{printf(" %8.5f ",$3)}' t.f >> ${root}.nrms
   awk '{if( $3 > 1 ) {printf(" %8.4f ",$2^2*365)} else {printf(" %8.1f ",0.0)}}' t.f >> ${root}.mar
   echo -n "    0.0 " >> ${root}.mar

   grep -h $pn $list | grep 'B Axis Bias   (none) ' | awk '{print " 1 " substr($0,47,10)*100,substr($0,75)*100}' >! t.r
   poly01r yes 0 no no 0 < t.r | awk '{print $2/100, $15/100,$13,$11}'>! t.f
   awk '{printf(" %8.5f ",$1)}' t.f >> ${root}.mean
   awk '{printf(" %8.5f ",$2)}' t.f >> ${root}.wrms
   awk '{printf(" %8.5f ",$3)}' t.f >> ${root}.nrms
   awk '{if( $3 > 1 ) {printf(" %8.4f ",$2^2*365)} else {printf(" %8.1f ",0.0)}}' t.f >> ${root}.mar
   echo -n "    0.0 " >> ${root}.mar

   grep -h $pn $list | grep 'Cos Direct    (none)' | awk '{print " 1 " substr($0,47,10)*100,substr($0,75)*100+1.e-6}' >! t.r
   poly01r yes 0 no no 0 < t.r | awk '{print $2/100, $15/100,$13,$11}'>! t.f
   awk '{printf(" %8.5f ",$1)}' t.f >> ${root}.mean
   awk '{printf(" %8.5f ",$2)}' t.f >> ${root}.wrms
   awk '{printf(" %8.5f ",$3)}' t.f >> ${root}.nrms
   awk '{if( $3 > 1 ) {printf(" %8.4f ",$2^2*365)} else {printf(" %8.1f ",0.0)}}' t.f >> ${root}.mar

# MOD TAH 070925: Added 1e-6 to sigma for cases when parameter is fixed
   grep -h $pn $list | grep 'Sin Direct    (none)' | awk '{print " 1 " substr($0,47,10)*100,substr($0,75)*100+1.e-6}' >! t.r
   poly01r yes 0 no no 0 < t.r | awk '{print $2/100, $15/100,$13,$11}'>! t.f
   awk '{printf(" %8.5f ",$1)}' t.f >> ${root}.mean
   awk '{printf(" %8.5f ",$2)}' t.f >> ${root}.wrms
   awk '{printf(" %8.5f ",$3)}' t.f >> ${root}.nrms
   awk '{if( $3 > 1 ) {printf(" %8.4f ",$2^2*365)} else {printf(" %8.1f ",0.0)}}' t.f >> ${root}.mar

   grep -h $pn $list | grep 'Cos Y Bias    (none)' | awk '{print " 1 " substr($0,47,10)*100,substr($0,75)*100+1.e-6}' >! t.r
   poly01r yes 0 no no 0 < t.r | awk '{print $2/100, $15/100,$13,$11}'>! t.f
   awk '{printf(" %8.5f ",$1)}' t.f >> ${root}.mean
   awk '{printf(" %8.5f ",$2)}' t.f >> ${root}.wrms
   awk '{printf(" %8.5f ",$3)}' t.f >> ${root}.nrms
   awk '{if( $3 > 1 ) {printf(" %8.4f ",$2^2*365)} else {printf(" %8.1f ",0.0)}}' t.f >> ${root}.mar

   grep -h $pn $list | grep 'Sin Y Bias    (none)' | awk '{print " 1 " substr($0,47,10)*100,substr($0,75)*100+1.e-6}' >! t.r
   poly01r yes 0 no no 0 < t.r | awk '{print $2/100, $15/100,$13,$11}'>! t.f
   awk '{printf(" %8.5f ",$1)}' t.f >> ${root}.mean
   awk '{printf(" %8.5f ",$2)}' t.f >> ${root}.wrms
   awk '{printf(" %8.5f ",$3)}' t.f >> ${root}.nrms
   awk '{if( $3 > 1 ) {printf(" %8.4f ",$2^2*365)} else {printf(" %8.1f ",0.0)}}' t.f >> ${root}.mar

   grep -h $pn $list | grep 'Cos B Bias    (none)' | awk '{print " 1 " substr($0,47,10)*100,substr($0,75)*100}' >! t.r
   poly01r yes 0 no no 0 < t.r | awk '{print $2/100, $15/100,$13,$11}'>! t.f
   awk '{printf(" %8.5f ",$1)}' t.f >> ${root}.mean
   awk '{printf(" %8.5f ",$2)}' t.f >> ${root}.wrms
   awk '{printf(" %8.5f ",$3)}' t.f >> ${root}.nrms
   awk '{if( $3 > 1 ) {printf(" %8.4f ",$2^2*365)} else {printf(" %8.1f ",0.0)}}' t.f >> ${root}.mar

   grep -h $pn $list | grep 'Sin B Bias    (none)' | awk '{print " 1 " substr($0,47,10)*100,substr($0,75)*100}' >! t.r
   poly01r yes 0 no no 0 < t.r | awk '{print $2/100, $15/100,$13,$11}'>! t.f
   awk '{printf(" %8.5f ",$1)}' t.f >> ${root}.mean
   awk '{printf(" %8.5f ",$2)}' t.f >> ${root}.wrms
   awk '{printf(" %8.5f ",$3)}' t.f >> ${root}.nrms
   awk '{if( $3 > 1 ) {printf(" %8.4f ",$2^2*365)} else {printf(" %8.1f ",0.0)}}' t.f >> ${root}.mar

   echo " " >> ${root}.mean
   echo " " >> ${root}.wrms
   echo " " >> ${root}.nrms
   echo " " >> ${root}.mar

end
 


